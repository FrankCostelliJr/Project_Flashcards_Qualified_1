{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\Study.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { readDeck } from '../../utils/api/index';\nimport Card from './Card';\n\nfunction Study() {\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const loadDeck = async () => {\n      const loadedDeck = await readDeck(deckId);\n      setDeck(() => loadedDeck);\n    };\n\n    loadDeck();\n  }, [deckId]);\n\n  if (Object.keys(deck).length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deckId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, deck.name)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Study\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Study: \", deck.name), /*#__PURE__*/React.createElement(StudyCard, {\n      cards: deck.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n}\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/frank/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Deck/Study.js"],"names":["React","useEffect","useState","useParams","Link","readDeck","Card","Study","deckId","deck","setDeck","loadDeck","loadedDeck","Object","keys","length","name","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAaL,SAAS,EAA5B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMC,UAAU,GAAG,MAAMP,QAAQ,CAACG,MAAD,CAAjC;AACAE,MAAAA,OAAO,CAAC,MAAME,UAAP,CAAP;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACH,MAAD,CANM,CAAT;;AAQA,MAAGK,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAArB,EAA6B;AAE3B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,oBAAW,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAIE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASP,MAAO,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,IAAI,CAACO,IAApC,CADF,CAJF,eAOE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAuC,sBAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYP,IAAI,CAACO,IAAjB,CAZF,eAaE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEP,IAAI,CAACQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAkBD,GApBD,MAoBO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF;;AAED,eAAeV,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { readDeck } from '../../utils/api/index';\r\nimport Card from './Card';\r\n\r\nfunction Study() {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({});\r\n\r\n  useEffect(() => {\r\n    const loadDeck = async () => {\r\n      const loadedDeck = await readDeck(deckId);\r\n      setDeck(() => loadedDeck);\r\n    };\r\n    loadDeck();\r\n  }, [deckId]);\r\n\r\n  if(Object.keys(deck).length) {\r\n\r\n    return (\r\n      <div>\r\n        <nav aria-label='breadcrumb'>\r\n          <ol className='breadcrumb'>\r\n            <li className=\"breadcrumb-item text-primary\">\r\n              <Link to='/'>Home</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item text-primary\">\r\n              <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Study</li>\r\n          </ol>\r\n        </nav>\r\n        <h1>Study: {deck.name}</h1>\r\n        <StudyCard cards={deck.cards} />\r\n      </div>\r\n    )\r\n\r\n  } else {\r\n    return <p>Loading...</p>\r\n  }\r\n}\r\n\r\nexport default Study\r\n"]},"metadata":{},"sourceType":"module"}