{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck\\\\ViewDeck.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { listCards } from '../../utils/api/index';\nimport { readDeck } from '../../utils/api/index';\nimport CardList from './CardList';\nimport BreadCrumb from './BreadCrumb';\n\nfunction ViewDeck({\n  deckList\n}) {\n  const [deck, setDeck] = useState({});\n  const [cardList, setCardList] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const thisDeck = await readDeck(deckId, abortController.signal);\n      setDeck(() => thisDeck);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadCards = async () => {\n      const cards = await listCards(deckId, abortController.signal);\n      setCardList(() => cards);\n    };\n\n    loadCards();\n    return () => abortController.abort();\n  }, [deckId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardList, {\n    cardList: cardList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ViewDeck;","map":{"version":3,"sources":["C:/Users/frank/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/ViewDeck.js"],"names":["React","useState","useEffect","useParams","listCards","readDeck","CardList","BreadCrumb","ViewDeck","deckList","deck","setDeck","cardList","setCardList","deckId","abortController","AbortController","loadDeck","thisDeck","signal","abort","loadCards","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,QAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAgC;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACS,MAAD,EAASC,eAAe,CAACI,MAAzB,CAA/B;AACAR,MAAAA,OAAO,CAAC,MAAMO,QAAP,CAAP;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACR,WAAO,MAAMF,eAAe,CAACK,KAAhB,EAAb;AACD,GARQ,EAQN,CAACN,MAAD,CARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMK,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,GAAG,MAAMlB,SAAS,CAACU,MAAD,EAASC,eAAe,CAACI,MAAzB,CAA7B;AACAN,MAAAA,WAAW,CAAC,MAAMS,KAAP,CAAX;AACD,KAHD;;AAIAD,IAAAA,SAAS;AACT,WAAO,MAAMN,eAAe,CAACK,KAAhB,EAAb;AACD,GARQ,EAQN,CAACN,MAAD,CARM,CAAT;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEJ,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeJ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { listCards } from '../../utils/api/index';\r\nimport { readDeck } from '../../utils/api/index';\r\nimport CardList from './CardList';\r\nimport BreadCrumb from './BreadCrumb';\r\n\r\n\r\nfunction ViewDeck( {deckList} ) {\r\n  const [deck, setDeck] = useState({});\r\n  const [cardList, setCardList] = useState([]);\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const loadDeck = async () => {\r\n      const thisDeck = await readDeck(deckId, abortController.signal);\r\n      setDeck(() => thisDeck);\r\n    }\r\n    loadDeck();\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const loadCards = async () => {\r\n      const cards = await listCards(deckId, abortController.signal);\r\n      setCardList(() => cards);\r\n    }\r\n    loadCards();\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n  \r\n  return (\r\n    <div>\r\n      <BreadCrumb deck={deck} />\r\n      <CardList cardList={cardList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewDeck\r\n"]},"metadata":{},"sourceType":"module"}