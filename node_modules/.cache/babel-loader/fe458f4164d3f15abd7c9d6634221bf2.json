{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\EditDeck.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { readDeck, updateDeck } from '../../utils/api/index';\n\nfunction EditDeck() {\n  const initialState = {\n    name: '',\n    description: ''\n  };\n  const [formData, setFormData] = useState(initialState);\n  const [deck, setDeck] = useState({});\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const loadedDeck = await readDeck(deckId, abortController.signal);\n      setDeck(() => loadedDeck);\n      setFormData({\n        id: deckId,\n        name: loadedDeck.name,\n        description: loadedDeck.description\n      });\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  const handleChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const updatedDeck = await updateDeck(formData);\n    history.push(`/decks/${updatedDeck.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default EditDeck;","map":{"version":3,"sources":["C:/Users/frank/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Deck/EditDeck.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","readDeck","updateDeck","EditDeck","initialState","name","description","formData","setFormData","deck","setDeck","history","deckId","abortController","AbortController","loadDeck","loadedDeck","signal","id","abort","handleChange","event","target","value","handleSubmit","preventDefault","updatedDeck","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,WAAW,EAAE;AAFM,GAArB;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACQ,YAAD,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMe,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaZ,SAAS,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,UAAU,GAAG,MAAMf,QAAQ,CAACW,MAAD,EAASC,eAAe,CAACI,MAAzB,CAAjC;AACAP,MAAAA,OAAO,CAAC,MAAMM,UAAP,CAAP;AACAR,MAAAA,WAAW,CAAC;AACVU,QAAAA,EAAE,EAAEN,MADM;AAEVP,QAAAA,IAAI,EAAEW,UAAU,CAACX,IAFP;AAGVC,QAAAA,WAAW,EAAEU,UAAU,CAACV;AAHd,OAAD,CAAX;AAKD,KARD;;AASAS,IAAAA,QAAQ;AACR,WAAO,MAAMF,eAAe,CAACM,KAAhB,EAAb;AACD,GAbQ,EAaN,CAACP,MAAD,CAbM,CAAT;;AAeA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9Bb,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACc,KAAK,CAACC,MAAN,CAAajB,IAAd,GAAqBgB,KAAK,CAACC,MAAN,CAAaC;AAFxB,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAOH,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,WAAW,GAAG,MAAMxB,UAAU,CAACK,QAAD,CAApC;AACAI,IAAAA,OAAO,CAACgB,IAAR,CAAc,UAASD,WAAW,CAACR,EAAG,EAAtC;AACD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { readDeck, updateDeck } from '../../utils/api/index';\r\n\r\nfunction EditDeck() {\r\n  const initialState = {\r\n    name: '',\r\n    description: ''\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [deck, setDeck] = useState({});\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const loadDeck = async () => {\r\n      const loadedDeck = await readDeck(deckId, abortController.signal);\r\n      setDeck(() => loadedDeck);\r\n      setFormData({\r\n        id: deckId,\r\n        name: loadedDeck.name,\r\n        description: loadedDeck.description\r\n      });\r\n    };\r\n    loadDeck();\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const updatedDeck = await updateDeck(formData);\r\n    history.push(`/decks/${updatedDeck.id}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDeck\r\n"]},"metadata":{},"sourceType":"module"}