{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck\\\\ViewDeck.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { listCards } from '../../utils/api/index';\nimport CardList from './CardList.';\nimport BreadCrumb from './BreadCrumb';\n\nfunction ViewDeck({\n  deckList\n}) {\n  const [cardList, setCardList] = useState([]);\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const foundDeck = await deckList.find(deck => deck.id === deckId, abortController.signal);\n      setDeck(() => foundDeck);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckList, deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadCards = async () => {\n      const cards = await listCards(deckId, abortController.signal);\n      setCardList(() => cards);\n    };\n\n    loadCards();\n    return () => abortController.abort();\n  }, [deckId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardList, {\n    cardList: cardList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ViewDeck;","map":{"version":3,"sources":["C:/Users/frank/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/ViewDeck.js"],"names":["React","useState","useEffect","useParams","listCards","CardList","BreadCrumb","ViewDeck","deckList","cardList","setCardList","deck","setDeck","deckId","abortController","AbortController","loadDeck","foundDeck","find","id","signal","abort","loadCards","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,QAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAgC;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAaV,SAAS,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAT,CAAcP,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYN,MAAlC,EAA0CC,eAAe,CAACM,MAA1D,CAAxB;AACAR,MAAAA,OAAO,CAAC,MAAMK,SAAP,CAAP;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACR,WAAO,MAAMF,eAAe,CAACO,KAAhB,EAAb;AACD,GARQ,EAQN,CAACb,QAAD,EAAWK,MAAX,CARM,CAAT;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,GAAG,MAAMnB,SAAS,CAACS,MAAD,EAASC,eAAe,CAACM,MAAzB,CAA7B;AACAV,MAAAA,WAAW,CAAC,MAAMa,KAAP,CAAX;AACD,KAHD;;AAIAD,IAAAA,SAAS;AACT,WAAO,MAAMR,eAAe,CAACO,KAAhB,EAAb;AACD,GARQ,EAQN,CAACR,MAAD,CARM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { listCards } from '../../utils/api/index';\r\nimport CardList from './CardList.';\r\nimport BreadCrumb from './BreadCrumb';\r\n\r\n\r\nfunction ViewDeck( {deckList} ) {\r\n  const [cardList, setCardList] = useState([]);\r\n  const [deck, setDeck] = useState({});\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const loadDeck = async () => {\r\n      const foundDeck = await deckList.find(deck => deck.id === deckId, abortController.signal);\r\n      setDeck(() => foundDeck);\r\n    }\r\n    loadDeck();\r\n    return () => abortController.abort();\r\n  }, [deckList, deckId])\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const loadCards = async () => {\r\n      const cards = await listCards(deckId, abortController.signal);\r\n      setCardList(() => cards);\r\n    }\r\n    loadCards();\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n  \r\n \r\n  return (\r\n    <div>\r\n      <CardList cardList={cardList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewDeck\r\n"]},"metadata":{},"sourceType":"module"}